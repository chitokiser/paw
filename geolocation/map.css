

html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  font-family: 'Segoe UI', Roboto, sans-serif;
  background: #f2f3f5;
}
#map {
  height: 100vh;
  width: 100%;
  position: relative;
}
/* Toast 디자인 개선 */
#eventToast {
  position: fixed;
  top: 60px;
  left: 50%;
  transform: translateX(-50%);
  padding: 16px 24px;
  border-radius: 8px;
  backdrop-filter: blur(8px);
  background: rgba(0, 0, 0, 0.7);
  color: #fff;
  font-size: 18px;
  display: none;
  z-index: 3000;
  box-shadow: 0 4px 16px rgba(0,0,0,0.3);
}
#eventToast.reward { background: rgba(40, 167, 69, 0.85); }
#eventToast.lost   { background: rgba(220, 53, 69, 0.85); }
#eventToast.bonus  { background: rgba(23, 162, 184, 0.85); }

/* 이벤트 로그 */
#eventLog {
  position: fixed;
  bottom: 160px;
  left: 50%;
  transform: translateX(-50%);
  width: calc(100% - 40px);
  max-width: 480px;
  background: rgba(0,0,0,0.5);
  color: #fff;
  font-size: 16px;
  border-radius: 8px;
  padding: 12px;
  z-index: 2500;
  max-height: 200px;
  overflow-y: auto;
}
#eventLog ul { margin: 0; padding: 0; list-style: none; }
#eventLog li {
  padding: 8px 0;
  border-bottom: 1px solid rgba(255,255,255,0.2);
}
#eventLog li:last-child { border-bottom: none; }

/* 하단 버튼 레이아웃 개선 */
.bottom-controls {
  position: fixed;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  display: grid;
  grid-template-columns: repeat(3, 64px);
  gap: 20px;
  z-index: 2000;
}
.bottom-controls button {
  width: 64px;
  height: 64px;
  border: none;
  border-radius: 50%;
  background: #fff;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  font-size: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s, box-shadow 0.2s;
}
.bottom-controls button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}
#homeBtn {
  width: auto;
  padding: 0 16px;
  border-radius: 16px;
  font-size: 18px;
}
#soundToggle {
  position: fixed;
  top: 30px;
  right: 30px;
  width: 56px;
  height: 56px;
  border: none;
  border-radius: 50%;
  background: #fff;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  font-size: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s;
}
#soundToggle:hover { transform: scale(1.1); }

  /* 살짝 떠다니는 효과 */
  .mon-bob { animation: bob 2.2s ease-in-out infinite; }
  @keyframes bob { 0%,100%{ transform: translateY(0) } 50%{ transform: translateY(-4px) } }

  /* 추격 중 파동(주의 표시) */
  .mon-chase { filter: drop-shadow(0 0 6px rgba(255,80,80,.65)); }

  /* 피격 연출: 흔들기 */
  .hit-shake { animation: hitshake .25s ease-in-out 2; }
  @keyframes hitshake {
    0%,100%{ transform: translate(0,0) } 25%{ transform: translate(-3px,0) } 75%{ transform: translate(3px,0) }
  }

  /* 공격 이펙트용 작은 붉은 점 */
  .atk-dot {
    width:12px; height:12px; border-radius:50%;
    background: rgba(255,60,60,.9); border:2px solid rgba(255,255,255,.8);
    box-shadow: 0 0 12px rgba(255,0,0,.7);
  }

  /* ===== Sprite Sheet Animations ===== */

/* 공통 스프라이트 박스 */
.sprite {
  position: relative;
  width: var(--fw, 80px);    /* frame width  */
  height: var(--fh, 80px);   /* frame height */
  background-image: var(--img);
  background-repeat: no-repeat;
  background-position: 0 0;
  image-rendering: pixelated;       /* 픽셀 스타일 스프라이트면 선명 */
  will-change: transform, background-position;
  transform-origin: 50% 50%;
}

/* 상태 태그 */
.sprite.mon-bob { animation: bob 2.2s ease-in-out infinite; }
.sprite.mon-chase { filter: drop-shadow(0 0 6px rgba(255,80,80,.65)); }

/* 방향 회전(도움: 바디가 고정된 상태에서 회전) */
.sprite.rot {
  /* JS에서 rotate(deg) 주입 */
}

/* 프레임 애니메이션 - 걷기/공격용 (JS가 @keyframes를 주입해 사용) */
.sprite.play {
  animation-timing-function: steps(var(--frames));
  animation-iteration-count: infinite; /* 걷기 */
  animation-name: var(--anim-name);    /* JS에서 주입 */
  animation-duration: var(--dur, 800ms);
}

/* 공격은 1회 재생 후 자동 해제 (JS에서 class 교체) */
.sprite.play-once {
  animation-timing-function: steps(var(--frames));
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-name: var(--anim-name);
  animation-duration: var(--dur, 600ms);
}

/* 맞았을 때 살짝 흔들기(네가 이미 만든 유틸과 연동) */
.sprite.hit-shake { animation: hitshake .25s ease-in-out 2; }

/* 공격 이펙트 점 */
.sprite .atk-dot {
  position:absolute; left:50%; top:50%; transform: translate(-50%,-50%);
  width:12px; height:12px; border-radius:50%;
  background: rgba(255,60,60,.9); border:2px solid rgba(255,255,255,.8);
  box-shadow: 0 0 12px rgba(255,0,0,.7);
}

#monsterForm {
  position: fixed;
  top: 90px;
  right: 20px;
  width: 320px;
  max-width: calc(100% - 40px);
  background: rgba(255,255,255,.95);
  border-radius: 12px;
  padding: 12px;
  box-shadow: 0 8px 24px rgba(0,0,0,.15);
  z-index: 2600;
}
#monsterForm input, #monsterForm button {
  width: 100%;
  margin: 6px 0;
  padding: 10px 12px;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  font-size: 14px;
}
#monsterForm button {
  background: #2563eb;
  color: #fff;
  border: 0;
  font-weight: 700;
  cursor: pointer;
}
/* 단일 스프라이트 시트용: 행(줄) 오프셋을 변수로 */
.sprite {
  background-position: 0 var(--by, 0px); /* Y를 변수로, X는 애니메이션에서 제어 */
}

/* 걷기(1행): y=0 */
.sprite.row-walk { --by: 0px; }

/* 공격(2행): y = -frameH */
.sprite.row-attack { --by: calc(var(--fh, 80px) * -1); }
